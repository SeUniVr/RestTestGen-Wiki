{"version":{"pluginId":"default","version":"current","label":"Next","banner":null,"badge":false,"noIndex":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"tutorialSidebar":[{"type":"link","label":"A Brief Recap","href":"/docs/intro","docId":"intro","unlisted":false},{"type":"category","label":"Tool Overview","items":[{"type":"link","label":"Core Components","href":"/docs/rtg-overview/core-components/core","docId":"rtg-overview/core-components/core","unlisted":false},{"type":"link","label":"Extensible Components","href":"/docs/rtg-overview/extensible-components/extensible","docId":"rtg-overview/extensible-components/extensible","unlisted":false}],"collapsed":true,"collapsible":true,"href":"/docs/category/tool-overview"},{"type":"category","label":"RTG Components","items":[{"type":"link","label":"Writer","href":"/docs/rtg-components/writer","docId":"rtg-components/writer","unlisted":false},{"type":"link","label":"Strategy","href":"/docs/rtg-components/strategy","docId":"rtg-components/strategy","unlisted":false},{"type":"link","label":"Parameter Value Provider","href":"/docs/rtg-components/pvp","docId":"rtg-components/pvp","unlisted":false},{"type":"link","label":"Oracle","href":"/docs/rtg-components/oracle","docId":"rtg-components/oracle","unlisted":false},{"type":"link","label":"Operation Sorter","href":"/docs/rtg-components/operation-sorter","docId":"rtg-components/operation-sorter","unlisted":false},{"type":"link","label":"Mutator","href":"/docs/rtg-components/mutator","docId":"rtg-components/mutator","unlisted":false},{"type":"link","label":"Interaction Processor","href":"/docs/rtg-components/interaction-processor","docId":"rtg-components/interaction-processor","unlisted":false},{"type":"link","label":"Fuzzer","href":"/docs/rtg-components/fuzzer","docId":"rtg-components/fuzzer","unlisted":false},{"type":"link","label":"Parameters","href":"/docs/rtg-components/parameters","docId":"rtg-components/parameters","unlisted":false}],"collapsed":true,"collapsible":true,"href":"/docs/category/rtg-components"}]},"docs":{"intro":{"id":"intro","title":"A Brief Recap","description":"Typically, an API (Application Programming Interface) is a set of rules and protocols that allow software to communicate with each other by exchanging data and information. API architecture, in general, is explained in terms of client and server: there is an application that sends a request (client) and an application that sends the response (server).","sidebar":"tutorialSidebar"},"rtg-components/fuzzer":{"id":"rtg-components/fuzzer","title":"Fuzzer","description":"A fuzzer is an automatic testing tool that injects random or mutated input into a system to detect errors, vulnerabilities or unexpected behaviour.","sidebar":"tutorialSidebar"},"rtg-components/interaction-processor":{"id":"rtg-components/interaction-processor","title":"Interaction Processor","description":"The abstract class `InteractionProcessor` defines an interface for processing test interactions. Within this class we find two methods: `canProcess`, to check whether an interaction is suitable for processing; `process` used to execute the processing of the interaction.","sidebar":"tutorialSidebar"},"rtg-components/mutator":{"id":"rtg-components/mutator","title":"Mutator","description":"A mutator is a software component that modifies in a controlled manner certain aspects of an entity, such as data, parameters or operations, with the aim of generating variations useful for testing, optimisation or analysis of the robustness of a system.","sidebar":"tutorialSidebar"},"rtg-components/operation-sorter":{"id":"rtg-components/operation-sorter","title":"Operation Sorter","description":"There are two type of operation sorter, the static and the dynamic one. Both of them extend the `OperationSorter` class.","sidebar":"tutorialSidebar"},"rtg-components/oracle":{"id":"rtg-components/oracle","title":"Oracle","description":"This component deals with making assertions on the correct execution of a `TestSequence`. Some implementations of the tool are already provided within the tool. Details of these are explained below.","sidebar":"tutorialSidebar"},"rtg-components/parameters":{"id":"rtg-components/parameters","title":"Parameters","description":"The abstract class `Parameter` provides the representation of a parameter within the OpenAPI specification. Parameters are used in HTTP requests to pass data, e.g. in query parameters, header, body, ...","sidebar":"tutorialSidebar"},"rtg-components/pvp":{"id":"rtg-components/pvp","title":"Parameter Value Provider","description":"This set of classes is used to provide a value to various parameters, based on different valuation methodologies. In the implementation of RestTestGen, we find two macro-types: single and multiple (i.e. combining several single strategies).","sidebar":"tutorialSidebar"},"rtg-components/strategy":{"id":"rtg-components/strategy","title":"Strategy","description":"To execute RestTestGen, the `main()` method inside the App class within the package `io.resttestgen.boot.cli` is executed. Within the project, there is also a configuration file `rtg-config.yml` in which anyone wishing to use the tool must specify the strategy to be used and the API to be tested.","sidebar":"tutorialSidebar"},"rtg-components/writer":{"id":"rtg-components/writer","title":"Writer","description":"The framework provides a component that allows the various `TestSequences` to be written to file. This is useful when a researcher or programmer needs to have a clearer view of the various tests that have been performed on the REST API under test.  At the moment, only three implementations are provided, however, it is possible to create others as desired and according to individual needs.","sidebar":"tutorialSidebar"},"rtg-overview/core-components/core":{"id":"rtg-overview/core-components/core","title":"Core Components","description":"The tool provides researchers and practitioners with some “core components” that are presented in detail below.","sidebar":"tutorialSidebar"},"rtg-overview/extensible-components/extensible":{"id":"rtg-overview/extensible-components/extensible","title":"Extensible Components","description":"These components are a set of abstract and concrete classes for which researchers or experts might want to provide a new implementation to realise their new testing algorithm.","sidebar":"tutorialSidebar"},"rtg-overview/main":{"id":"rtg-overview/main","title":"Tool Overview","description":""}}}}