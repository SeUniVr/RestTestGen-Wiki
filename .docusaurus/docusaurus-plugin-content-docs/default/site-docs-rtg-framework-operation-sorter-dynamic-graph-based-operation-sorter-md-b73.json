{
  "id": "rtg-framework/operation-sorter/dynamic/graph-based-operation-sorter",
  "title": "Graph Based Operation Sorter",
  "description": "This class extends `DynamicOperationSorter` and orders the operations to be tested according to a dependency structure between operations, represented by a graph (`OperationDependencyGraph`). The aim is to test the operations with fewer unsatisfied parameters and fewer previous test attempts first, optimising the order of the tests. In addition, the maximum attempts that can be made to test a given operation are also managed. In the dependency graph, nodes represent operations, while arcs indicate dependencies between operations. Dependent operations are fulfilled when the required inputs have been produced by previous operations. Note the `removeFirst()` methods that extract the first operation from the queue and the `refresh()` method that repopulates the queue with operations that have not yet been tested. They are ordered by number of unsatisfied parameters, HTTP method (CRUD semantics is followed), number of previous test attempts.",
  "source": "@site/docs/rtg-framework/operation-sorter/dynamic/graph-based-operation-sorter.md",
  "sourceDirName": "rtg-framework/operation-sorter/dynamic",
  "slug": "/rtg-framework/operation-sorter/dynamic/graph-based-operation-sorter",
  "permalink": "/docs/rtg-framework/operation-sorter/dynamic/graph-based-operation-sorter",
  "draft": false,
  "unlisted": false,
  "tags": [],
  "version": "current",
  "frontMatter": {}
}